[tool.poetry]
name = "desafio-backend"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.1.2"
djangorestframework = "^3.15.2"
django-stubs-ext = "^5.1.1"
django-types = "^0.19.1"
django-extensions = "^3.2.3"
drf-spectacular = "^0.27.2"
djangorestframework-types = "^0.9.0"
factory-boy = "^3.3.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".direnv",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "node_modules",
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
ignore = ["ANN003", "ANN101", "ISC001", "D203", "D213"]
select = [
    "ANN", # flake8-annotations
    "ARG", # flake8-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe complexity
    "DJ",  # flake8-django
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle
    "EM",  # flake8-errmsg
    "F",   # flake8
    "G",   # flake8-logging-format
    "I",   # isort
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "T10", # flake8-print
    "TCH", # flake8-type-checking
    "TRY", # tryceratops
    "UP",  # pyupgrade
]
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-single-line = true
